"""



__str__ | __repr__


این دو متد برای زمانی هستش که شما میخواید یک آبجکت رو چاپ کنیم
بدون این متودها، پایتون میگه این آبجکت مال کدوم کلاسه و آدرس حافظه اش چیه


__str__:
زمانی که یک آبجکت رو پرینت می کنیم، این متود اجرا می شود اما زمانی استفاده می شود که
بخواهیم چیزی به کاربر نشان دهیم


__repr__:
تلفظ متود 'رپر' به این صورت است: آر-یی -- پی-آر
متد 'رپر' هم دقیقا زمانی استفاده میشه که شما یک آبجکت رو صدا بزنیدم
اما تفاوتی که داره اینکه اگه کدتون رو از طریق ترمینال اجرا کنید متد 'رپر' فعال خواهد شد
درواقع متد 'رپر' برای زمانی هستش که شما قراره یک نتیجه رو به برنامه نویس دیگه نشون بدید اما
متد 'اس تی آر' برای زمانی هستش که شما میخواید یک نتیجه رو به کاربر نشون بدین


str() and repr():
ما دو متود بیلت این نیز داریم که رفتارشون مثل دو متود داندر بالا است و عملا به ما کمک می کند


تفاوت این دو:
متد 'اس تی آر' برای نشون دادن یک نتیجه به کاربر عادی اما
متد 'رپر' با هدف دیباگ کردن برنامه و نشون دادن یک پیغام به برنامه نویس دیگه استفاده میشه
دلیل فعال شدن متود 'رپر' در ترمینال اینه که، مفسر میگه کسی که بلده بیاد اینجا و 
همچین کارهایی کنه، خب برنامه نویسه! پس چرا من بهش متود 'اس تی آر' رو بر گردونم؟ اگر
در ترمینال، پرینت کنیم، متود 'اس تی آر' برمیگردونه و اگر خود آبجکت رو صدا بزنیم، متود 'رپر' رو برمیگردونه

زمانی که هر دو متود فعال باشند، اولویت با متود 'اس تی آر' است و 'رپر' دیگه فعال نمیشه



نکته ای درباره اف استرینگ:
ما یکسری کانورتر داریم که می تونیم به مقادیرمون نشون بدیم
مثلا علامت عجب و آر یعنی متود 'رپر' رو صدا میزنه یا علامت تعجبو اس بزاریم، مطمئن میشه داریم متود 'اس تی آر' رو
صدا می زنیم



"""
import datetime



class  Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def __str__(self):
        return f'{self.name!s} is {self.age!s} years old!'

    def __repr__(self):
        return f'{self.__class__.__name__}({self.name!r}, {self.age})'

    @staticmethod
    def show_time():
        return datetime.datetime.now()



person_1 = Person('Mahdi', 18)
print(person_1)
print(repr(person_1))

print(str(person_1.show_time())) # 2021-12-18 10:04:02.562518
print(repr(person_1.show_time())) # datetime.datetime(2021, 12, 18, 10, 4, 2, 562566)