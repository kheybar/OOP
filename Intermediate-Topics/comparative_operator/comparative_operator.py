"""

Comparative Operator => == vs is

برای مقایسه آبجکت ها در پایتون میتوان از دو عملگر بالا استفاده کرد. تفاوت ظریفی بین این دو عملگر وجود دارد
ممکن است شنیده باشید که عملگر "ایز" از "مساوی مساوی" سرعت بیشتری دارد. یا حس کنید که "ایز" پایتونی‌تر است
اما باید به یاد داشته باشید که این دو عملگر در ظاهر به یک شکل کار میکنند اما در باطن تفاوت بزرگی دارند
عملگر "مساوی مساوی" برابری دو آبجکت را بررسی میکند اما عملگر "ایز" بررسی میکند که دو آبجکت به یک مقدار در حافظه اشاره کنند


مقایسه آبجکت‌ها با "ایز" و "ایز نات" در پایتون:
عملگرهای "ایز" و "ایز نات" هویت دو آبجکت را مقایسه میکنند
در "سی پایتون" این به معنی آدرس حافظه آنها است. هر چیزی در پایتون یک آبجکت است و هر آبجکتی در حافظه مموری ذخیره می شود
دو عملگر "ایز" و "ایز نات" بررسی میکنند که آیا دو آبجکت به یک آدرس در حافظه اشاره میکنند یا خیر
شما میتوانید از متد "آیدی()" استفاده کنید و هویت یک آبجکت را بررسی کنید

"""

# is
# a = [1, 2, 3]
# b = a

# print(id(a)) # 140530350502336
# print(id(b)) # 140530350502336

# print(a is b) # True
# print(a == b) # True

# b[0] = 4 # We change b and it does change a! because both of them hint to one place of memory.
# print(a) # [4, 2, 3]


# ==
# a = [1, 2, 3]
# b = [1, 2, 3]

# print(id(a)) # 140349558243776
# print(id(b)) # 140349557885504

# print(a is b) # False
# print(a == b) # True

# b[0] = 4 # We change b and it does not change a. because each have specific place in memory.
# print(a) # [1, 2, 3]
