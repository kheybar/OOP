"""



Iterable, Iterator, Iteration => Iterate:
هر سه این کلمات از کلمه "ایتریت" مشتق شدن. در زبان انگلیسی کلمه "ایتریت" به معنی تکرار کردن است


Iteration:
در پایتون به عمل تکرار کردن میگیم "ایتریشن". ما دونوع ایتریشن داریم. حلقه فور و حلقه وایل
پس به خود عمل تکرار کردن میگیم ایتریشن


Iterable:
به آبجکت هایی که بتونیم روی اونها عمل تکرار رو انجام بدیم میگیم "ایتریبل". یا به عبارت دیگه به هر آبجکتی که
بتونیم روش عمل "ایتریشن" رو انجام بدیم، میگیم ایتریبل. مانند لیست، دیکشنری و ساختار داده های دیگر


Iterator:
به آبجکت هایی که بتونن آخرین وضعیت خودشون رو حفظ کنند میگیم "ایتریتور". آبجکت هایی که بتوان روی آن ها
متد "نکست" رو اجرا کرد می توانند آخرین وضعیت خودشون رو حفظ کنند
با استفاده از متود داخلی "دی آی آر" می توانیم تمام اتربیوت و متود های موجود در ساختار داده رو مشاهده کنیم
مثلا در لیست نمی توان متود "نکست" را یافت اما متود "داندر ایتر" رو داریم. با استفاده از این متود
می توانیم آبجکت خود را به ایتریتور تبدیل کنیم. اگر یکبار دیگر متود "دی آی آر" را فراخوانی کنیم، این بار
می توانیم "داندر نکست" را ببینیم. الان می توانیم با متود داخلی نکست بر روی تک تک آیتم های داده مان دسترسی داشته باشیم
ما فقط می تونیم دونه دونه بریم جلو، عقب نمی تونیم برگردیم



"""

# Iteration
# iter() or __iter__

# for i in range(1, 10):
#     print(i)

# i = 0
# while (i<10):
#     print(i)
#     i += 1

# -------------


# Iterable
name = 'Mahdi'
names = ['Mahdi', 'Rose']
nums = (1, 2, 3, 4, 5, 6, 7,)
e_p_dict = {'person': 'adam', 'character': 'shakhsyat'}
populate = {1, 2, 3, 4, 5, 6, 7}

# for e, p in e_p_dict.keys(), e_p_dict.values():
#     print(f'{e}: {p}')

# -------------


# Iterator
# next() or __next__

numbers = [1, 2, 3,]

# print(dir(numbers))

inumbers= iter(numbers) # maintaining last situation

print(next(inumbers))
print(next(inumbers)) # this syntax better than __next__
print(inumbers.__next__()) # no differnet with next()
# print(next(inumbers)) # StopIteration
