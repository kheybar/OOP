"""


پایتون به صورت پیشفرض یکسری متد در اختیار شما قرار داده که هرکدام وظیفه انجام کاری رو دارند
شکل نامگذاری این متدها: __<name>__
دو 'آندرلاین' قبل و دو 'آندرلاین' بعد از نام متد قرار می گیرد
این متدها رزرو شده توسط پایتون هستند که بر رفتار سطح بالای یک شی تأثیر می‌گذارند
این متدها با نامهای جادویی، خاص یا داندر شناخته می شوند
یادگیری استفاده از متدهای خاص ما را قادر می سازد تا کلاس های ظریف و قدرتمندی از اشیاء را طراحی کنیم

__init__:
نمونه ای از یک متد خاص است که در زمان ایجاد شدن یک آبجکت از یک کلاس فراخوانی می شود و مقدمه ساز کلاس است
این متود به ما اجازه میدهد در زمان ساخت آبجکت، مستقیما آرگومان‌ها را به کلاس‌ ارسال کنیم

__add__:
زمانی که بخواهید با عملگر + دو آبجکت را با هم جمع کنید، این متود فعال می شود

__str__:
این متود زمانی فعال می شود که بخواهید یک آبجکت را مستقیما در دستور پرینت کنیم
بدون این متود، زمان پرینت شدن، حافظه مموری این آبجکت را بر می گرداند



"""
class Car:
    
    def __init__(self, name, price): # dunder init
        self.name = name
        self.price = price

    def __str__(self): # dunder str
        return f'{self.name} - {self.price}'

    def __add__(self, other): # dunder add
        return self.price + other.price

    def __len__(self): # dunder len
        return len(self.name)



car_1 = Car('Benz', 45000)
car_2 = Car('Bmw', 40000)


print(car_1) # __str__

print(car_1 + car_2) # __add__

print(len(car_1)) # __len__